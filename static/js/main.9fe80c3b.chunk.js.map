{"version":3,"sources":["components/Form.jsx","components/Card.jsx","components/FilterCards.jsx","App.js","index.js"],"names":["Form","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","className","htmlFor","placeholder","type","name","id","value","onChange","max","min","checked","disabled","onClick","Component","Card","cardCreate","onRemoveCard","index","src","alt","FilterCards","searchCard","searchInput","rarity","handleSelect","handleCheckboxFilter","checkboxDisable","App","handleCheckBox","state","setState","checkedButtonDisable","target","getTrunfo","arraySave","find","element","trunfoFiltered","bind","isvalid","event","preventDefault","previous","cardIndex","filteredArr","filter","_","arrayVerification","att1InNumber","Number","att2InNumber","att3InNumber","push","length","every","condition","inputFilter","includes","map","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe80c3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropType from 'prop-types';\nimport '../Styles/Form.css'\nexport default class Form extends Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick,\n    } = this.props;\n\n    return (\n      <form>\n        <h1 className=\"title\">Crie sua carta</h1>\n        <label htmlFor=\"cardName\">\n          <p className=\"labelText\">Nome</p>\n          <input\n            placeholder=\"Digite o nome da carta\"\n            type=\"text\"\n            data-testid=\"name-input\"\n            name=\"cardName\"\n            id=\"cardName\"\n            value={ cardName }\n            onChange={ onInputChange }\n          />\n        </label>\n\n        <label htmlFor=\"cardDescription\">\n          <p className=\"labelText\">Descrição:</p>\n          <textarea\n            placeholder=\"Digite uma descrição\"\n            data-testid=\"description-input\"\n            name=\"cardDescription\"\n            id=\"cardDescription\"\n            value={ cardDescription }\n            onChange={ onInputChange }\n          />\n        </label>\n\n        <label htmlFor=\"cardAttr1\" className=\"attr-box\">\n          <p className=\"labelText\" id=\"ataque\">Ataque</p>\n          <input\n            type=\"number\"\n            data-testid=\"attr1-input\"\n            name=\"cardAttr1\"\n            className=\"cardAttr\"\n            id=\"cardAttr1\"\n            value={ cardAttr1 }\n            onChange={ onInputChange }\n            max=\"90\"\n            min=\"0\"\n          />\n        </label>\n\n        <label htmlFor=\"cardAttr2\" className=\"attr-box\">\n          <p className=\"labelText\" id=\"defesa\">Defesa</p>\n          <input\n            type=\"number\"\n            data-testid=\"attr2-input\"\n            name=\"cardAttr2\"\n            className=\"cardAttr\"\n            id=\"cardAttr2\"\n            value={ cardAttr2 }\n            onChange={ onInputChange }\n            max=\"90\"\n            min=\"0\"\n          />\n        </label>\n\n        <label htmlFor=\"cardAttr3\" className=\"attr-box\">\n          <p className=\"labelText\" id=\"vida\">Vida</p>\n          <input\n            type=\"number\"\n            data-testid=\"attr3-input\"\n            name=\"cardAttr3\"\n            className=\"cardAttr\"\n            id=\"cardAttr3\"\n            value={ cardAttr3 }\n            onChange={ onInputChange }\n            max=\"90\"\n            min=\"0\"\n          />\n        </label>\n\n        <label htmlFor=\"cardImage\">\n          <p className=\"labelText\">URL da imagem</p>\n          <input\n            type=\"text\"\n            data-testid=\"image-input\"\n            name=\"cardImage\"\n            id=\"cardImage\"\n            value={ cardImage }\n            onChange={ onInputChange }\n          />\n        </label>\n\n        <label htmlFor=\"cardRare\">\n          <p className=\"labelText\">Raridade</p>\n          <select\n            data-testid=\"rare-input\"\n            id=\"cardRare\"\n            name=\"cardRare\"\n            value={ cardRare }\n            onChange={ onInputChange }\n          >\n            <option value=\"normal\">Normal</option>\n            <option value=\"raro\">Raro</option>\n            <option value=\"muito raro\">Muito raro</option>\n          </select>\n        </label>\n\n        {\n          hasTrunfo === true ? <p>Você já tem um Super Trunfo em seu baralho</p> : (\n            <label htmlFor=\"cardTrunfo\" id=\"labelTrunfo\">\n              <input\n                type=\"checkbox\"\n                data-testid=\"trunfo-input\"\n                name=\"cardTrunfo\"\n                id=\"cardTrunfo\"\n                checked={ cardTrunfo }\n                onChange={ onInputChange }\n              />\n              <p className=\"labelText\">Super trunfo?</p>\n            </label>\n          )\n        }\n\n        <button\n          disabled={ isSaveButtonDisabled }\n          onClick={ onSaveButtonClick }\n          type=\"submit\"\n          id=\"btn-save\"\n          data-testid=\"save-button\"\n        >\n          Salvar\n\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropType.string.isRequired,\n  cardDescription: PropType.string.isRequired,\n  cardAttr1: PropType.string.isRequired,\n  cardAttr2: PropType.string.isRequired,\n  cardAttr3: PropType.string.isRequired,\n  cardImage: PropType.string.isRequired,\n  cardRare: PropType.string.isRequired,\n  cardTrunfo: PropType.bool.isRequired,\n  hasTrunfo: PropType.bool.isRequired,\n  isSaveButtonDisabled: PropType.bool.isRequired,\n  onInputChange: PropType.func.isRequired,\n  onSaveButtonClick: PropType.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropType from 'prop-types';\n\nimport '../Styles/Cards.css'\n\nexport default class Card extends Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      cardCreate,\n      onRemoveCard,\n      index,\n    } = this.props;\n    return (\n      <div id=\"main-section-preview\">\n      <section id=\"section-preview\">\n        \n        <h3 id=\"cardNamePreview\" data-testid=\"name-card\">\n          {cardName}\n        </h3>\n\n          <img\n          id=\"card-image-preview\"\n          data-testid=\"image-card\"\n          src={ cardImage }\n          alt={ cardName }\n        />\n\n        <span data-testid=\"description-card\">\n          {cardDescription}\n        </span>\n\n        <span data-testid=\"attr1-card\">\n          {cardAttr1}\n        </span>\n\n        <span data-testid=\"attr2-card\">\n          {cardAttr2}\n        </span>\n\n        <span data-testid=\"attr3-card\">\n          {cardAttr3}\n        </span>\n\n        <span data-testid=\"rare-card\">\n          {cardRare}\n        </span>\n\n        {\n          cardTrunfo\n            ? <span data-testid=\"trunfo-card\">Super Trunfo</span> : null\n        }\n\n        <span>\n          {cardCreate\n            ? (\n              <button\n                onClick={ () => onRemoveCard(index) }\n                type=\"button\"\n                data-testid=\"delete-button\"\n              >\n                Excluir\n\n              </button>\n            ) : null}\n        </span>\n        </section>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropType.string.isRequired,\n  cardDescription: PropType.string.isRequired,\n  cardAttr1: PropType.string.isRequired,\n  cardAttr2: PropType.string.isRequired,\n  cardAttr3: PropType.string.isRequired,\n  cardImage: PropType.string.isRequired,\n  cardRare: PropType.string.isRequired,\n  cardTrunfo: PropType.bool.isRequired,\n  cardCreate: PropType.bool.isRequired,\n  onRemoveCard: PropType.func.isRequired,\n  index: PropType.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FilterCards extends Component {\n  render() {\n    const {\n      searchCard,\n      searchInput,\n      rarity,\n      handleSelect,\n      handleCheckboxFilter,\n      checkboxDisable,\n    } = this.props;\n    return (\n      <section>\n        <h1>Filtro de busca</h1>\n        <input\n          placeholder=\"Nome da carta\"\n          data-testid=\"name-filter\"\n          type=\"text\"\n          onChange={ searchCard }\n          value={ searchInput }\n          disabled={ checkboxDisable }\n        />\n\n        <select\n          onChange={ handleSelect }\n          data-testid=\"rare-filter\"\n          value={ rarity }\n          disabled={ checkboxDisable }\n        >\n          <option value=\"todas\">Todas</option>\n          <option value=\"normal\">Normal</option>\n          <option value=\"raro\">Raro</option>\n          <option value=\"muito raro\">Muito raro</option>\n        </select>\n\n        <label htmlFor=\"filterInput\">\n          <input\n            type=\"checkbox\"\n            id=\"filterInput\"\n            data-testid=\"trunfo-filter\"\n            onClick={ handleCheckboxFilter }\n          />\n        </label>\n      </section>\n    );\n  }\n}\n\nFilterCards.propTypes = {\n  searchCard: PropTypes.func.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  handleCheckboxFilter: PropTypes.func.isRequired,\n  rarity: PropTypes.string.isRequired,\n  searchInput: PropTypes.string.isRequired,\n  checkboxDisable: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport FilterCards from './components/FilterCards';\n\nimport './Styles/App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      arraySave: [],\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      cardCreate: false,\n      isSaveButtonDisabled: true,\n      searchInput: '',\n      rarity: '',\n      trunfoFiltered: '',\n      checkboxDisable: false,\n    };\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.isvalid = this.isvalid.bind(this);\n    this.onSaveButtonClick = this.onSaveButtonClick.bind(this);\n    this.onRemoveCard = this.onRemoveCard.bind(this);\n  }\n\n  onInputChange({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    }, () => this.isvalid());\n  }\n\n  handleCheckBox = () => {\n    const { hasTrunfo } = this.state;\n    if (hasTrunfo) this.setState({ checkedButtonDisable: true });\n  };\n\n  onSaveButtonClick(event) {\n    event.preventDefault();\n\n    const { cardTrunfo } = this.state;\n\n    if (cardTrunfo) this.setState({ hasTrunfo: true });\n\n    this.setState((previous) => ({\n      arraySave: [...previous.arraySave, { ...previous }],\n    }), () => {\n      this.setState({\n        cardName: '',\n        cardDescription: '',\n        cardImage: '',\n        cardAttr1: '0',\n        cardAttr2: '0',\n        cardAttr3: '0',\n        cardRare: 'normal',\n        cardCreate: true,\n        isSaveButtonDisabled: true,\n        cardTrunfo: false,\n      });\n    });\n  }\n\n  onRemoveCard(cardIndex) {\n    const { arraySave } = this.state;\n    const indexArrraySave = arraySave[cardIndex];\n\n    if (indexArrraySave.cardTrunfo) this.setState({ hasTrunfo: false });\n\n    const filteredArr = arraySave.filter((_, index) => index !== cardIndex);\n    this.setState({ arraySave: filteredArr });\n  }\n\n  searchCard = ({ target }) => {\n    const { value } = target;\n    this.setState({ searchInput: value });\n  };\n\n  handleSelect = ({ target }) => {\n    const { value } = target;\n    if (value === 'todas') {\n      this.setState({ rarity: '' });\n    } else { this.setState({ rarity: value }); }\n  };\n\n  handleCheckboxFilter = ({ target }) => {\n    const { arraySave } = this.state;\n    const getTrunfo = arraySave.find((element) => element.hasTrunfo);\n    if (getTrunfo) this.setState({ trunfoFiltered: getTrunfo.cardName });\n    const { checked } = target;\n    if (checked) this.setState({ checkboxDisable: checked });\n    else { this.setState({ checkboxDisable: false }); }\n  };\n\n  isvalid() {\n    const { cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n    } = this.state;\n\n    const arrayVerification = [];\n    const att1InNumber = Number(cardAttr1);\n    const att2InNumber = Number(cardAttr2);\n    const att3InNumber = Number(cardAttr3);\n\n    const maxTotalAtt = 210;\n    const maxAtt = 90;\n\n    arrayVerification.push(\n      cardName.length > 0\n      && cardDescription.length > 0\n      && cardImage.length > 0\n      && cardRare.length > 0\n      && att1InNumber >= 0 && att1InNumber <= maxAtt\n      && att2InNumber >= 0 && att2InNumber <= maxAtt\n      && att3InNumber >= 0 && att3InNumber <= maxAtt\n      && att1InNumber + att2InNumber + att3InNumber <= maxTotalAtt,\n    );\n\n    if (arrayVerification.every((condition) => condition === true)) {\n      this\n        .setState({ isSaveButtonDisabled: false });\n    } else {\n      this.setState({ isSaveButtonDisabled: true });\n    }\n  }\n\n  render() {\n    const {\n      state: {\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo,\n        hasTrunfo,\n        isSaveButtonDisabled,\n        arraySave,\n        cardCreate,\n        searchInput,\n        rarity,\n        checkboxDisable,\n      },\n      onInputChange,\n      onSaveButtonClick,\n      onRemoveCard,\n      searchCard,\n      handleSelect,\n      handleCheckboxFilter,\n    } = this;\n    return (\n      <main>\n        <h1 id=\"title\">Super Trunfo: The Witcher </h1>\n        <section className=\"main-content\">\n          \n          <div id=\"form-content\">\n            <Form\n              cardName={cardName}\n              cardDescription={cardDescription}\n              cardAttr1={cardAttr1}\n              cardAttr2={cardAttr2}\n              cardAttr3={cardAttr3}\n              cardImage={cardImage}\n              cardRare={cardRare}\n              cardTrunfo={cardTrunfo}\n              hasTrunfo={hasTrunfo}\n              isSaveButtonDisabled={isSaveButtonDisabled}\n              onInputChange={onInputChange}\n              onSaveButtonClick={onSaveButtonClick}\n            />\n          </div>\n          <div id=\"preview-content\">\n            <h1>Pré-visualização</h1>\n            <Card\n              cardName={cardName}\n              cardDescription={cardDescription}\n              cardAttr1={cardAttr1}\n              cardAttr2={cardAttr2}\n              cardAttr3={cardAttr3}\n              cardImage={cardImage}\n              cardRare={cardRare}\n              cardTrunfo={cardTrunfo}\n              key=\"preview\"\n              index={0}\n              cardCreate={false}\n              onRemoveCard={onRemoveCard}\n            />\n          </div>\n        </section>\n\n        <div>\n          <FilterCards\n            handleSelect={handleSelect}\n            searchCard={searchCard}\n            searchInput={searchInput}\n            rarity={rarity}\n            handleCheckboxFilter={handleCheckboxFilter}\n            checkboxDisable={checkboxDisable}\n          />\n\n          <span>\n            {arraySave\n              .filter((inputFilter) => (inputFilter.cardName.includes(searchInput)))\n              .filter((element) => {\n                if (checkboxDisable) return element.cardTrunfo;\n                if (rarity === '') return element.cardRare.includes(rarity);\n                if (rarity !== '') return element.cardRare === rarity;\n                return true;\n              })\n              .map((element, index) => (\n                <div id=\"span-content\" key={index}>\n                  <Card\n                    cardName={element.cardName}\n                    cardDescription={element.cardDescription}\n                    cardAttr1={element.cardAttr1}\n                    cardAttr2={element.cardAttr2}\n                    cardAttr3={element.cardAttr3}\n                    cardImage={element.cardImage}\n                    cardRare={element.cardRare}\n                    cardTrunfo={element.cardTrunfo}\n                    cardCreate={cardCreate}\n                    onRemoveCard={onRemoveCard}\n                    key={index}\n                    index={index}\n                  />\n                </div>\n              ))}\n          </span>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}